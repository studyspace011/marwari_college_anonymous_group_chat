// === ‡§ï‡•â‡§®‡•ç‡§´‡§º‡§ø‡§ó ===
// === CONFIG ===
// ‡§Ö‡§™‡§®‡•Ä ‡§µ‡•á‡§¨ ‡§ê‡§™ URL ‡§Ø‡§π‡§æ‡§Ç ‡§™‡•á‡§∏‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç (‡§â‡§¶‡§æ‡§π‡§∞‡§£: https://script.google.com/macros/s/AKfycb.../exec)
// Paste your Web App URL here (e.g., https://script.google.com/macros/s/AKfycb.../exec)
const API_URL = 'https://script.google.com/macros/s/AKfycbwmnYD-VUJpGOIFQoKqsAyAuezGbUVZGQVVd6tak-ulRfj1f3nN1LxofI0ajfjBy1PvNg/exec';
const POLL_MS = 3000; // ‡§π‡§∞ 3 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§Æ‡•á‡§Ç ‡§®‡§è ‡§∏‡§Ç‡§¶‡•á‡§∂‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ã‡§≤ ‡§ï‡§∞‡•á‡§Ç

// === ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ===
// === STATE ===
const ls = window.localStorage;
// ‡§Ø‡§¶‡§ø ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à ‡§§‡•ã ‡§è‡§ï ‡§Ö‡§¶‡•ç‡§µ‡§ø‡§§‡•Ä‡§Ø ‡§ó‡•Å‡§Æ‡§®‡§æ‡§Æ ID ‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§ï‡§∞‡•á‡§Ç
const anonId = ls.getItem('anonId') || (() => {
    const id = Math.random().toString(36).slice(2, 10);
    ls.setItem('anonId', id);
    return id;
})();
const savedName = ls.getItem('name') || '';
const savedColor = ls.getItem('color') || randomColor();

// DOM ‡§§‡§§‡•ç‡§µ‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç
const el = {
    list: document.getElementById('list'),
    name: document.getElementById('name'),
    color: document.getElementById('color'),
    msg: document.getElementById('message'),
    send: document.getElementById('sendBtn'),
    emojiBtn: document.getElementById('emojiBtn'),
    tray: document.getElementById('tray'),
};

// ‡§∏‡§π‡•á‡§ú‡•á ‡§ó‡§è ‡§Æ‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§á‡§®‡§™‡•Å‡§ü ‡§´‡§º‡•Ä‡§≤‡•ç‡§° ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
el.name.value = savedName;
el.color.value = savedColor;

// === ‡§á‡§Æ‡•ã‡§ú‡•Ä ‡§ü‡•ç‡§∞‡•á ===
// === Emoji tray ===
const EMOJIS = "üòÄüòÅüòÇü§£üôÇüòâüòäüòçüòòüòéü§óü§©ü§îü§®üòêüò¥üò™üò∑ü§íü§ïü§ßü•≥ü§†ü§´ü§≠ü§§üòèüôÉüòáü•≤üò≠üò§üò°üò±üò≥üò¨üòµ‚Äçüí´üòÆ‚Äçüí®üíÄü§ùüëèüëçüëéüôèüí™üî•‚ú®üåüüéâüéàü•∞üíî‚ù§Ô∏è‚Äçüî•‚ù§Ô∏è‚Äçü©π‚ù§Ô∏èüíôüíöüíõüíúü§çü´∂üëåü§åü§üüëãüôåü´°ü´†ü´£ü´¢ü´°".split('');
function buildTray() {
    el.tray.innerHTML = '';
    EMOJIS.forEach(e => {
        const b = document.createElement('button');
        b.textContent = e;
        b.addEventListener('click', () => {
            el.msg.value += e; // ‡§á‡§Æ‡•ã‡§ú‡•Ä ‡§ï‡•ã ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§á‡§®‡§™‡•Å‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
            toggleTray(false); // ‡§á‡§Æ‡•ã‡§ú‡•Ä ‡§ü‡•ç‡§∞‡•á ‡§ï‡•ã ‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç
            el.msg.focus(); // ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§á‡§®‡§™‡•Å‡§ü ‡§™‡§∞ ‡§´‡§º‡•ã‡§ï‡§∏ ‡§µ‡§æ‡§™‡§∏ ‡§ï‡§∞‡•á‡§Ç
        });
        el.tray.appendChild(b);
    });
}
buildTray(); // ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü‡§Ö‡§™ ‡§™‡§∞ ‡§á‡§Æ‡•ã‡§ú‡•Ä ‡§ü‡•ç‡§∞‡•á ‡§¨‡§®‡§æ‡§è‡§Ç

function toggleTray(force) {
    // ‡§ü‡•ç‡§∞‡•á ‡§ï‡•Ä ‡§¶‡•É‡§∂‡•ç‡§Ø‡§§‡§æ ‡§ï‡•ã ‡§ü‡•â‡§ó‡§≤ ‡§ï‡§∞‡•á‡§Ç
    const on = force !== undefined ? force : el.tray.style.display !== 'grid';
    el.tray.style.display = on ? 'grid' : 'none';
    el.tray.setAttribute('aria-hidden', on ? 'false' : 'true');
}
el.emojiBtn.addEventListener('click', () => toggleTray()); // ‡§á‡§Æ‡•ã‡§ú‡•Ä ‡§¨‡§ü‡§® ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡§®‡•á ‡§™‡§∞ ‡§ü‡•ç‡§∞‡•á ‡§ï‡•ã ‡§ü‡•â‡§ó‡§≤ ‡§ï‡§∞‡•á‡§Ç

// === ‡§Ö‡§™‡§∂‡§¨‡•ç‡§¶ ‡§´‡§º‡§ø‡§≤‡•ç‡§ü‡§∞ (‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä) ===
// === Profanity filter (basic) ===
const BAD_WORDS = ['*****','*****','*****','*****','*****','*****','*****','chutiya','madarchod','behenchod','randi','harami','gaand','saala','nalayak'];
function cleanProfanity(text) {
    // ‡§Ö‡§™‡§∂‡§¨‡•ç‡§¶‡•ã‡§Ç ‡§ï‡•ã ‡§§‡§æ‡§∞‡•ã‡§Ç ‡§∏‡•á ‡§¨‡§¶‡§≤‡•á‡§Ç (‡§™‡§π‡§≤‡§æ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§õ‡•ã‡§°‡§º‡§ï‡§∞)
    const pattern = new RegExp('\\b(' + BAD_WORDS.map(w => w.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&')).join('|') + ')\\b', 'gi');
    return text.replace(pattern, (m) => m[0] + '*'.repeat(Math.max(0, m.length - 1)));
}

// === ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§ï‡§æ‡§∞‡•ç‡§Ø ===
// === Helpers ===
function randomColor() {
    // ‡§è‡§ï ‡§Ø‡§æ‡§¶‡•É‡§ö‡•ç‡§õ‡§ø‡§ï HSL ‡§∞‡§Ç‡§ó ‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§ï‡§∞‡•á‡§Ç
    const h = Math.floor(Math.random()*360);
    return `hsl(${h} 70% 60%)`;
}
function isoToTime(iso) {
    // ISO ‡§∏‡•ç‡§ü‡•ç‡§∞‡§ø‡§Ç‡§ó ‡§ï‡•ã HH:MM ‡§∏‡§Æ‡§Ø ‡§™‡•ç‡§∞‡§æ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§¨‡§¶‡§≤‡•á‡§Ç
    try {
        const d = new Date(iso);
        const hh = d.getHours().toString().padStart(2,'0');
        const mm = d.getMinutes().toString().padStart(2,'0');
        return `${hh}:${mm}`;
    } catch { return ''; }
}
function renderText(txt) {
    // @‡§â‡§≤‡•ç‡§≤‡•á‡§ñ‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§æ‡§á‡§≤‡§æ‡§á‡§ü ‡§ï‡§∞‡•á‡§Ç
    return txt.replace(/(^|\s)@([a-zA-Z0-9_-]{2,20})/g, (m, sp, who) => `${sp}<span class="mention">@${who}</span>`);
}

// HTML ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§µ‡§∞‡•ç‡§£‡•ã‡§Ç ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç
function escapeHtml(s) {
    return s.replace(/[&<>"']/g, (c) => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[c]));
}

// === ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∞‡•á‡§Ç‡§°‡§∞ ‡§ï‡§∞‡•á‡§Ç ===
// === Fetch & render ===
let cacheIds = new Set(); // ‡§°‡•Å‡§™‡•ç‡§≤‡§ø‡§ï‡•á‡§ü ‡§∏‡§Ç‡§¶‡•á‡§∂‡•ã‡§Ç ‡§∏‡•á ‡§¨‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ID ‡§ï‡•à‡§∂ ‡§ï‡§∞‡•á‡§Ç
async function fetchMessages() {
    try {
        const res = await fetch(API_URL, { method: 'GET' });
        const data = await res.json();
        if (!data.ok) return;
        drawList(data.messages || []); // ‡§∏‡§Ç‡§¶‡•á‡§∂‡•ã‡§Ç ‡§ï‡•ã UI ‡§Æ‡•á‡§Ç ‡§°‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç
    } catch (e) {
        // ‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï: ‡§è‡§ï ‡§õ‡•ã‡§ü‡§æ ‡§ï‡§®‡•á‡§ï‡•ç‡§ü‡§ø‡§µ‡§ø‡§ü‡•Ä ‡§∏‡§Ç‡§ï‡•á‡§§ ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç
        console.error("‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø:", e);
    }
}

function drawList(messages) {
    // ‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä ‡§°‡•Å‡§™‡•ç‡§≤‡•Ä‡§ï‡•á‡§∂‡§® ‡§π‡§ü‡§æ‡§®‡§æ
    const frag = document.createDocumentFragment();
    messages.forEach(m => {
        if (cacheIds.has(m.id)) return; // ‡§Ø‡§¶‡§ø ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§ï‡•à‡§∂ ‡§Æ‡•á‡§Ç ‡§π‡•à, ‡§§‡•ã ‡§õ‡•ã‡§°‡§º ‡§¶‡•á‡§Ç
        cacheIds.add(m.id); // ‡§ï‡•à‡§∂ ‡§Æ‡•á‡§Ç ‡§®‡§à ‡§∏‡§Ç‡§¶‡•á‡§∂ ID ‡§ú‡•ã‡§°‡§º‡•á‡§Ç

        const me = m.anonId === anonId; // ‡§Ø‡§π ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§Æ‡•á‡§∞‡•á ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§≠‡•á‡§ú‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç
        const row = document.createElement('div');
        row.className = 'msg' + (me ? ' me' : ''); // ‡§Ø‡§¶‡§ø ‡§Ø‡§π ‡§Æ‡•á‡§∞‡§æ ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§π‡•à ‡§§‡•ã 'me' ‡§ï‡•ç‡§≤‡§æ‡§∏ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç

        const av = document.createElement('div');
        av.className = 'avatar';
        av.style.color = '#000';
        av.style.background = m.color || '#aaa';
        av.textContent = (m.name || 'A')[0]?.toUpperCase() || 'A'; // ‡§®‡§æ‡§Æ ‡§ï‡§æ ‡§™‡§π‡§≤‡§æ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§Ö‡§µ‡§§‡§æ‡§∞ ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç

        const bubble = document.createElement('div');
        bubble.className = 'bubble';

        const meta = document.createElement('div');
        meta.className = 'meta';

        const nm = document.createElement('span');
        nm.className = 'name';
        nm.textContent = m.name || 'Anon'; // ‡§Ø‡§¶‡§ø ‡§®‡§æ‡§Æ ‡§ñ‡§æ‡§≤‡•Ä ‡§π‡•à ‡§§‡•ã 'Anon' ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç
        nm.style.color = m.color || '#7aa2f7';

        const time = document.createElement('span');
        time.className = 'time';
        time.textContent = isoToTime(m.ts);

        meta.appendChild(nm);
        meta.appendChild(time);

        const text = document.createElement('div');
        text.className = 'text';
        text.innerHTML = renderText(escapeHtml(m.message)); // ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§ï‡•ã ‡§∞‡•á‡§Ç‡§°‡§∞ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ @‡§â‡§≤‡•ç‡§≤‡•á‡§ñ‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§æ‡§á‡§≤‡§æ‡§á‡§ü ‡§ï‡§∞‡•á‡§Ç

        bubble.appendChild(meta);
        bubble.appendChild(text);

        row.appendChild(av);
        row.appendChild(bubble);
        frag.appendChild(row);
    });

    // ‡§ï‡•á‡§µ‡§≤ ‡§™‡§π‡§≤‡•á ‡§≤‡•ã‡§° ‡§™‡§∞ ‡§∏‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§°‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç; ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§µ‡•É‡§¶‡•ç‡§ß‡§ø‡§∂‡•Ä‡§≤ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
    if (el.list.children.length === 0) {
        el.list.innerHTML = '';
        // ‡§ñ‡§∞‡•ã‡§Ç‡§ö ‡§∏‡•á ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§¨‡§®‡§æ‡§è‡§Ç
        messages.forEach(m => cacheIds.add(m.id)); // ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø ‡§ï‡•à‡§∂ ‡§≠‡§∞‡§æ ‡§π‡•Å‡§Ü ‡§π‡•à
        el.list.appendChild(frag);
    } else {
        el.list.appendChild(frag);
    }
    // ‡§®‡•Ä‡§ö‡•á ‡§ë‡§ü‡•ã-‡§∏‡•ç‡§ï‡•ç‡§∞‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç
    el.list.parentElement.scrollTop = el.list.parentElement.scrollHeight;
}


// === ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§≠‡•á‡§ú‡•á‡§Ç ===
// === Send ===
async function send() {
    let name = el.name.value.trim();
    if (!name) {
        // ‡§°‡§ø‡§µ‡§æ‡§á‡§∏ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§ó‡•Å‡§Æ‡§®‡§æ‡§Æ ‡§®‡§æ‡§Æ
        if (!ls.getItem('anonName')) {
            ls.setItem('anonName', 'Anon-' + Math.random().toString(36).slice(2,6));
        }
        name = ls.getItem('anonName');
    }
    const color = el.color.value || randomColor();
    const raw = el.msg.value.trim();
    if (!raw) return; // ‡§Ø‡§¶‡§ø ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§ñ‡§æ‡§≤‡•Ä ‡§π‡•à ‡§§‡•ã ‡§ï‡•Å‡§õ ‡§® ‡§ï‡§∞‡•á‡§Ç

    // ‡§µ‡§∞‡•Ä‡§Ø‡§§‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§∏‡§π‡•á‡§ú‡•á‡§Ç
    ls.setItem('name', el.name.value.trim());
    ls.setItem('color', color);

    // ‡§ï‡•ç‡§≤‡§æ‡§á‡§Ç‡§ü ‡§™‡§∞ ‡§Ö‡§™‡§∂‡§¨‡•ç‡§¶‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç
    const message = cleanProfanity(raw);

    // POST ‡§Ö‡§®‡•Å‡§∞‡•ã‡§ß ‡§≠‡•á‡§ú‡•á‡§Ç
    try {
        el.send.disabled = true; // ‡§≠‡•á‡§ú‡§®‡•á ‡§ï‡•á ‡§¶‡•å‡§∞‡§æ‡§® ‡§¨‡§ü‡§® ‡§ï‡•ã ‡§Ö‡§ï‡•ç‡§∑‡§Æ ‡§ï‡§∞‡•á‡§Ç
        const res = await fetch(API_URL, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ name, message, color, anonId })
        });
        const data = await res.json();
        // ‡§∏‡•ç‡§®‡•à‡§™‡•Ä ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§∂‡§æ‡§µ‡§æ‡§¶‡•Ä ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
        if (data.ok) {
            const now = new Date().toISOString();
            // ‡§Ö‡§∏‡•ç‡§•‡§æ‡§Ø‡•Ä ID ‡§Ø‡§æ ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ID ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç
            drawList([{ id: data.id || Math.random().toString(36), ts: now, anonId, name, color, message }]);
            el.msg.value = ''; // ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§á‡§®‡§™‡•Å‡§ü ‡§ï‡•ã ‡§∏‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç
        }
    } catch (e) {
        console.error("‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§≠‡•á‡§ú‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø:", e);
        // ‡§ö‡•Å‡§™‡§ö‡§æ‡§™ ‡§Ö‡§®‡§¶‡•á‡§ñ‡§æ ‡§ï‡§∞‡•á‡§Ç
    } finally {
        el.send.disabled = false; // ‡§¨‡§ü‡§® ‡§ï‡•ã ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§∏‡§ï‡•ç‡§∑‡§Æ ‡§ï‡§∞‡•á‡§Ç
        el.msg.focus(); // ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§á‡§®‡§™‡•Å‡§ü ‡§™‡§∞ ‡§´‡§º‡•ã‡§ï‡§∏ ‡§µ‡§æ‡§™‡§∏ ‡§ï‡§∞‡•á‡§Ç
    }
}

// === ‡§ò‡§ü‡§®‡§æ ‡§∂‡•ç‡§∞‡•ã‡§§‡§æ ===
// === Event Listeners ===
el.send.addEventListener('click', send); // ‡§≠‡•á‡§ú‡•á‡§Ç ‡§¨‡§ü‡§® ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡§®‡•á ‡§™‡§∞ ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§≠‡•á‡§ú‡•á‡§Ç
el.msg.addEventListener('keydown', (e) => {
    // ‡§è‡§Ç‡§ü‡§∞ ‡§¶‡§¨‡§æ‡§®‡•á ‡§™‡§∞ (‡§∂‡§ø‡§´‡•ç‡§ü ‡§ï‡•á ‡§¨‡§ø‡§®‡§æ) ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§≠‡•á‡§ú‡•á‡§Ç
    if (e.key === 'Enter' && !e.shiftKey) {
        e.preventDefault(); // ‡§°‡§ø‡§´‡§º‡•â‡§≤‡•ç‡§ü ‡§µ‡•ç‡§Ø‡§µ‡§π‡§æ‡§∞ (‡§®‡§à ‡§™‡§Ç‡§ï‡•ç‡§§‡§ø) ‡§∞‡•ã‡§ï‡•á‡§Ç
        send();
    }
});
el.name.addEventListener('change', () => ls.setItem('name', el.name.value.trim())); // ‡§®‡§æ‡§Æ ‡§¨‡§¶‡§≤‡§®‡•á ‡§™‡§∞ ‡§∏‡§π‡•á‡§ú‡•á‡§Ç
el.color.addEventListener('change', () => ls.setItem('color', el.color.value)); // ‡§∞‡§Ç‡§ó ‡§¨‡§¶‡§≤‡§®‡•á ‡§™‡§∞ ‡§∏‡§π‡•á‡§ú‡•á‡§Ç

// === ‡§™‡•ã‡§≤‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç ===
// === Start Polling ===
fetchMessages(); // ‡§™‡•ç‡§∞‡§æ‡§∞‡§Ç‡§≠‡§ø‡§ï ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§≤‡•ã‡§°
setInterval(fetchMessages, POLL_MS); // ‡§π‡§∞ 3 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§Æ‡•á‡§Ç ‡§∏‡§Ç‡§¶‡•á‡§∂‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ã‡§≤ ‡§ï‡§∞‡•á‡§Ç

